package baochen.greendao.dao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import baochen.greendao.bean.Customer;
import baochen.greendao.bean.Site;
import baochen.greendao.bean.UserBean;
import baochen.greendao.bean.UserBean1;
import baochen.greendao.bean.UserBean3;

import baochen.greendao.dao.gen.CustomerDao;
import baochen.greendao.dao.gen.SiteDao;
import baochen.greendao.dao.gen.UserBeanDao;
import baochen.greendao.dao.gen.UserBean1Dao;
import baochen.greendao.dao.gen.UserBean3Dao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig customerDaoConfig;
    private final DaoConfig siteDaoConfig;
    private final DaoConfig userBeanDaoConfig;
    private final DaoConfig userBean1DaoConfig;
    private final DaoConfig userBean3DaoConfig;

    private final CustomerDao customerDao;
    private final SiteDao siteDao;
    private final UserBeanDao userBeanDao;
    private final UserBean1Dao userBean1Dao;
    private final UserBean3Dao userBean3Dao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        customerDaoConfig = daoConfigMap.get(CustomerDao.class).clone();
        customerDaoConfig.initIdentityScope(type);

        siteDaoConfig = daoConfigMap.get(SiteDao.class).clone();
        siteDaoConfig.initIdentityScope(type);

        userBeanDaoConfig = daoConfigMap.get(UserBeanDao.class).clone();
        userBeanDaoConfig.initIdentityScope(type);

        userBean1DaoConfig = daoConfigMap.get(UserBean1Dao.class).clone();
        userBean1DaoConfig.initIdentityScope(type);

        userBean3DaoConfig = daoConfigMap.get(UserBean3Dao.class).clone();
        userBean3DaoConfig.initIdentityScope(type);

        customerDao = new CustomerDao(customerDaoConfig, this);
        siteDao = new SiteDao(siteDaoConfig, this);
        userBeanDao = new UserBeanDao(userBeanDaoConfig, this);
        userBean1Dao = new UserBean1Dao(userBean1DaoConfig, this);
        userBean3Dao = new UserBean3Dao(userBean3DaoConfig, this);

        registerDao(Customer.class, customerDao);
        registerDao(Site.class, siteDao);
        registerDao(UserBean.class, userBeanDao);
        registerDao(UserBean1.class, userBean1Dao);
        registerDao(UserBean3.class, userBean3Dao);
    }
    
    public void clear() {
        customerDaoConfig.getIdentityScope().clear();
        siteDaoConfig.getIdentityScope().clear();
        userBeanDaoConfig.getIdentityScope().clear();
        userBean1DaoConfig.getIdentityScope().clear();
        userBean3DaoConfig.getIdentityScope().clear();
    }

    public CustomerDao getCustomerDao() {
        return customerDao;
    }

    public SiteDao getSiteDao() {
        return siteDao;
    }

    public UserBeanDao getUserBeanDao() {
        return userBeanDao;
    }

    public UserBean1Dao getUserBean1Dao() {
        return userBean1Dao;
    }

    public UserBean3Dao getUserBean3Dao() {
        return userBean3Dao;
    }

}
